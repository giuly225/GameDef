// Variabili per il personaggio e l'ostacolo
let player;
let obstacle;

function setup() {
  createCanvas(800, 600); // Impostiamo la dimensione della finestra di gioco
  player = new Player();   // Creiamo il nostro personaggio
  obstacle = new Obstacle(); // Creiamo l'ostacolo
}

function draw() {
  background(220); // Colore di sfondo

  player.update(); // Aggiorniamo la posizione del personaggio
  player.display(); // Visualizziamo il personaggio

  obstacle.update(); // Aggiorniamo la posizione dell'ostacolo
  obstacle.display(); // Visualizziamo l'ostacolo

  // Controlliamo se il personaggio tocca l'ostacolo
  if (player.collidesWith(obstacle)) {
    textSize(32);
    fill(0);
    text("Game Over", width / 2 - 100, height / 2);
    noLoop(); // Ferma il gioco
  }
}

// Classe per il personaggio
class Player {
  constructor() {
    this.x = width / 2;
    this.y = height - 50;
    this.size = 50;
  }

  update() {
    if (keyIsDown(LEFT_ARROW)) {
      this.x -= 5; // Muove a sinistra
    }
    if (keyIsDown(RIGHT_ARROW)) {
      this.x += 5; // Muove a destra
    }
    if (keyIsDown(UP_ARROW)) {
      this.y -= 5; // Muove verso l'alto
    }
    if (keyIsDown(DOWN_ARROW)) {
      this.y += 5; // Muove verso il basso
    }
  }

  display() {
    fill(0, 0, 255);
    noStroke();
    rect(this.x, this.y, this.size, this.size); // Disegna un rettangolo per il personaggio
  }

  collidesWith(obstacle) {
    return (
      this.x < obstacle.x + obstacle.size &&
      this.x + this.size > obstacle.x &&
      this.y < obstacle.y + obstacle.size &&
      this.y + this.size > obstacle.y
    ); // Verifica la collisione con l'ostacolo
  }
}

// Classe per l'ostacolo
class Obstacle {
  constructor() {
    this.x = random(width);
    this.y = 0;
    this.size = 50;
    this.speed = 2;
  }

  update() {
    this.y += this.speed; // L'ostacolo si muove verso il basso

    if (this.y > height) {
      this.y = 0; // Rientra dall'alto una volta che esce dallo schermo
      this.x = random(width); // Cambia posizione orizzontale
    }
  }

  display() {
    fill(255, 0, 0);
    noStroke();
    rect(this.x, this.y, this.size, this.size); // Disegna l'ostacolo
  }
}
